#!/usr/bin/with-contenv bashio
# shellcheck shell=bash
set -e

bashio::log.info "Starting Dispatcharr..."

# Debug: Check if binary exists and permissions
bashio::log.info "Binary location check: $(ls -la /app/ || echo 'Directory not found')"
bashio::log.info "Binary permissions: $(ls -la /app/dispatcharr || echo 'Binary not found')"

# Check what type of file it is
bashio::log.info "File type: $(file /app/dispatcharr || echo 'Could not determine file type')"

# Test if we can execute as root first
bashio::log.info "Testing binary execution as root..."
chmod 755 /app/dispatcharr

# Try a simple test - just run the binary briefly
bashio::log.info "Attempting to run binary with --help..."
if timeout 5 /app/dispatcharr --help >/dev/null 2>&1; then
    bashio::log.info "Binary executed successfully as root"
elif timeout 5 /app/dispatcharr --version >/dev/null 2>&1; then
    bashio::log.info "Binary executed successfully as root (version check)"
else
    bashio::log.warning "Binary test failed, but continuing anyway..."
fi

# Get user and group IDs from config
PUID=$(bashio::config 'PUID')
PGID=$(bashio::config 'PGID')

bashio::log.info "Running as PUID=${PUID}, PGID=${PGID}"

# Set timezone if specified
if bashio::config.has_value 'TZ'; then
    export TZ=$(bashio::config 'TZ')
    bashio::log.info "Timezone set to: ${TZ}"
fi

# Set log level
LOG_LEVEL=$(bashio::config 'log_level')
export LOG_LEVEL="$LOG_LEVEL"
bashio::log.info "Log level set to: ${LOG_LEVEL}"

# Ensure data directory has correct permissions
mkdir -p /data
chown -R ${PUID}:${PGID} /data

# Set ownership of binary
chown ${PUID}:${PGID} /app/dispatcharr

bashio::log.info "Final binary permissions: $(ls -la /app/dispatcharr)"

bashio::log.info "Starting Dispatcharr as user ${PUID}:${PGID}..."

# Change to app directory
cd /app

# Start Dispatcharr with proper user permissions
bashio::log.info "Executing: s6-setuidgid ${PUID}:${PGID} ./dispatcharr"
exec s6-setuidgid ${PUID}:${PGID} ./dispatcharr
